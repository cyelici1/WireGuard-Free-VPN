name: Personal Secure VPN (WireGuard)

on:
  # فعال سازی دستی (Trigger) از طریق دکمه "Run Workflow" در GitHub Actions
  workflow_dispatch:

jobs:
  vpn:
    # اجرا روی آخرین نسخه لینوکس اوبونتو
    runs-on: ubuntu-latest
    # تنظیم حداکثر زمان اجرا به 360 دقیقه (6 ساعت)
    timeout-minutes: 360

    steps:
      - name: Update & install packages
        run: |
          sudo apt update -y
          # نصب WireGuard، qrencode (برای QR کد)، curl و iptables-persistent
          sudo apt install -y wireguard qrencode curl iptables-persistent

      - name: Prepare workspace & Generate New Keys
        run: |
          mkdir -p $HOME/wg
          cd $HOME/wg
          
          # ساخت کلیدهای عمومی و خصوصی جدید برای هر بار اجرا (امن و جلوگیری از خطای کلیدهای قدیمی)
          umask 077
          wg genkey | tee server_private.key | wg pubkey > server_public.key
          wg genkey | tee client_private.key | wg pubkey > client_public.key
          chmod 600 server_private.key client_private.key
          echo "✅ New keys generated."
          echo " "

      - name: Build server and client configs
        run: |
          cd $HOME/wg
          WG_IF=wg0
          WG_PORT=51820
          # دریافت آدرس IP عمومی سرور مجازی GitHub
          WG_HOST=$(curl -s icanhazip.com) 

          SERVER_PRIV=$(cat server_private.key)
          SERVER_PUB=$(cat server_public.key)
          CLIENT_PUB=$(cat client_public.key)
          
          # ساخت فایل کانفیگ سرور (wg0.conf) و اعمال مجوزهای sudo
          cat << CONF | sudo tee /etc/wireguard/wg0.conf
[Interface]
PrivateKey = ${SERVER_PRIV}
Address = 10.0.0.1/24
ListenPort = ${WG_PORT}
PostUp = iptables -A FORWARD -i ${WG_IF} -j ACCEPT; iptables -A FORWARD -o ${WG_IF} -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i ${WG_IF} -j ACCEPT; iptables -D FORWARD -o ${WG_IF} -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

[Peer]
PublicKey = ${CLIENT_PUB}
AllowedIPs = 10.0.0.2/32
CONF
          
          # ساخت فایل کانفیگ کلاینت (client.conf)
          cat << CLIENT_CONF > client.conf
[Interface]
PrivateKey = $(cat client_private.key)
Address = 10.0.0.2/24
DNS = 8.8.8.8

[Peer]
PublicKey = ${SERVER_PUB}
Endpoint = ${WG_HOST}:${WG_PORT}
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25
CLIENT_CONF

          echo "✅ Configuration files built."
          echo " "

      - name: Start WireGuard and show config
        run: |
          # فعال سازی IP Forwarding (ضروری برای VPN)
          sudo sysctl -w net.ipv4.ip_forward=1
          # راه اندازی WireGuard
          sudo wg-quick up wg0
          
          echo " "
          echo "✅ WireGuard VPN server is running on IP: ${WG_HOST}:${WG_PORT}"
          echo "📱 QR code for quick import (اسکن کنید):"
          # نمایش QR code برای اسکن مستقیم
          qrencode -t ansiutf8 < $HOME/wg/client.conf
          echo " "
          echo "❗️ سرور تا حدود 6 ساعت دیگر خاموش خواهد شد. برای تمدید، مجدداً دکمه Run را بزنید."

      # آپلود کانفیگ به عنوان Artifact برای دانلود
      - name: Upload client config (for download)
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-client-config
          path: $HOME/wg/client.conf

      # این مرحله برای نگهداری سرور به مدت زمان timeout-minutes ضروری است.
      - name: Keep job alive (Sleep)
        run: |
          echo "Keeping the VPN server alive for the remaining time..."
          # 355 دقیقه (5 ساعت و 55 دقیقه) برای جلوگیری از Timeout
          sleep 355m
