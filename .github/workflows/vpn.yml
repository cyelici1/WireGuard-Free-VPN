name: WireGuard VPN (6-Hour Free VPS)

on:
  # ŸÅÿπÿßŸÑ ÿ≥ÿßÿ≤€å ÿØÿ≥ÿ™€å ÿßÿ≤ ÿ∑ÿ±€åŸÇ ÿØ⁄©ŸÖŸá "Run Workflow"
  workflow_dispatch:

jobs:
  vpn:
    runs-on: ubuntu-latest
    # ÿ≠ÿØÿß⁄©ÿ´ÿ± ÿ≤ŸÖÿßŸÜ ÿßÿ¨ÿ±ÿß 6 ÿ≥ÿßÿπÿ™
    timeout-minutes: 360

    steps:
      - name: System Setup and Package Installation
        run: |
          sudo apt update -y
          # ŸÜÿµÿ® WireGuard Ÿà qrencode (ÿ®ÿ±ÿß€å QR)
          sudo apt install -y wireguard qrencode curl iptables-persistent net-tools

      - name: Key Generation and Environment Setup
        run: |
          mkdir -p $HOME/wg
          cd $HOME/wg
          umask 077
          
          # ÿ™ŸàŸÑ€åÿØ ⁄©ŸÑ€åÿØŸáÿß€å €å⁄©ÿ™ÿß ÿ®ÿ±ÿß€å Ÿáÿ± ÿ®ÿßÿ± ÿßÿ¨ÿ±ÿß
          wg genkey | tee server_private.key | wg pubkey > server_public.key
          wg genkey | tee client_private.key | wg pubkey > client_public.key
          
          # ÿ∞ÿÆ€åÿ±Ÿá ŸÖÿ™ÿ∫€åÿ±Ÿáÿß ÿØÿ± ŸÖÿ≠€åÿ∑ GitHub ÿ®ÿ±ÿß€å ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿØÿ± ŸÖÿ±ÿßÿ≠ŸÑ ÿ®ÿπÿØ€å
          WG_HOST=$(curl -s icanhazip.com) 
          echo "SERVER_PRIV_KEY=$(cat server_private.key)" >> $GITHUB_ENV
          echo "CLIENT_PRIV_KEY=$(cat client_private.key)" >> $GITHUB_ENV
          echo "SERVER_PUB_KEY=$(cat server_public.key)" >> $GITHUB_ENV
          echo "WG_HOST=$WG_HOST" >> $GITHUB_ENV

      - name: Configure WireGuard Server (wg0.conf)
        env:
          SERVER_PRIV: ${{ env.SERVER_PRIV_KEY }}
          CLIENT_PUB: ${{ env.CLIENT_PUB_KEY }}
          WG_IF: wg0
          WG_PORT: 51820
        run: |
          # ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ ÿ≥ÿßÿÆÿ™ÿßÿ± ÿß€åŸÖŸÜ ÿ™ÿ± shell ÿ®ÿ±ÿß€å ÿ¨ŸÑŸà⁄Ø€åÿ±€å ÿßÿ≤ ÿÆÿ∑ÿß€å YAML
          sudo sh -c 'cat << EOF > /etc/wireguard/wg0.conf
[Interface]
PrivateKey = ${SERVER_PRIV}
Address = 10.0.0.1/24
ListenPort = ${WG_PORT}
PostUp = iptables -A FORWARD -i ${WG_IF} -j ACCEPT; iptables -A FORWARD -o ${WG_IF} -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE; sysctl -w net.ipv4.ip_forward=1
PostDown = iptables -D FORWARD -i ${WG_IF} -j ACCEPT; iptables -D FORWARD -o ${WG_IF} -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
[Peer]
PublicKey = ${{ env.CLIENT_PUB }}
AllowedIPs = 10.0.0.2/32
EOF'

      - name: Configure WireGuard Client (client.conf)
        env:
          CLIENT_PRIV: ${{ env.CLIENT_PRIV_KEY }}
          SERVER_PUB: ${{ env.SERVER_PUB_KEY }}
          WG_HOST: ${{ env.WG_HOST }}
          WG_PORT: 51820
        run: |
          cat << EOF > $HOME/wg/client.conf
[Interface]
PrivateKey = ${CLIENT_PRIV}
Address = 10.0.0.2/24
DNS = 8.8.8.8, 1.1.1.1

[Peer]
PublicKey = ${SERVER_PUB}
Endpoint = ${WG_HOST}:${WG_PORT}
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25
EOF

      - name: Start WireGuard and Display Config
        run: |
          sudo wg-quick up wg0
          
          echo " "
          echo "--------------------------------------------------------"
          echo "‚úÖ VPN Server is Ready on IP: ${{ env.WG_HOST }}:51820"
          echo "--------------------------------------------------------"
          echo " "
          echo "üì± Scan the QR Code below to connect:"
          echo " "
          qrencode -t ansiutf8 < $HOME/wg/client.conf
          echo " "
          echo "--------------------------------------------------------"
          
      - name: Upload client config (for download)
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-client-config
          path: $HOME/wg/client.conf

      - name: Keep job alive (Sleep)
        run: |
          echo "Server will stay alive for 6 hours. To extend, run the workflow again."
          # ŸÜ⁄ØŸá ÿØÿßÿ¥ÿ™ŸÜ ÿ≥ÿ±Ÿàÿ± ÿ®Ÿá ŸÖÿØÿ™ 5 ÿ≥ÿßÿπÿ™ Ÿà 55 ÿØŸÇ€åŸÇŸá
          sleep 355m
